{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alima\\\\Desktop\\\\project\\\\node-react\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport CreateForm from \"./components/CreateForm\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CardForm from \"./components/CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState({\n    name: \"\",\n    text: \"\"\n  });\n  const [contactList, setContactList] = useState([]);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e;\n    setInput(prevValue => {\n      return { ...prevValue,\n        [name]: value\n      };\n    });\n  }\n\n  async function createContact(e) {\n    e.preventDefault();\n    const newContact = await request(\"http://localhost:5000/api\", \"POST\", input);\n    setContactList([...contactList, newContact]);\n    setInput({\n      name: \"\",\n      text: \"\"\n    });\n  }\n\n  async function deleteContact(id) {\n    await request(`http://localhost:5000/api/${id}`, \"DELETE\", null);\n    setContactList(contactList.filter(contact => id !== contact.id));\n  }\n\n  async function request(url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    try {\n      const headers = {};\n      let body;\n\n      if (data) {\n        headers[\"Content-Type\"] = \"application/json\";\n        body = JSON.stringify(data);\n      }\n\n      const response = await fetch(url, {\n        method,\n        headers,\n        body\n      });\n      return await response.json();\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  useEffect(async () => {\n    const response = await request(\"http://localhost:5000/api\");\n    setContactList(response);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CreateForm, {\n      name: input.name,\n      text: input.text,\n      onChange: handleChange,\n      onClick: e => createContact(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), contactList.map((contact, index) => /*#__PURE__*/_jsxDEV(CardForm, {\n      title: contact.name,\n      text: contact.text,\n      id: contact.id,\n      marked: contact.marked,\n      delete: deleteContact\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"xRNjh9WvE4CD9JM0T81ifZGBe9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CreateForm","CardForm","App","input","setInput","name","text","contactList","setContactList","handleChange","e","value","prevValue","createContact","preventDefault","newContact","request","deleteContact","id","filter","contact","url","method","data","headers","body","JSON","stringify","response","fetch","json","console","log","message","map","index","marked"],"sources":["C:/Users/Alima/Desktop/project/node-react/client/src/App.js"],"sourcesContent":["// import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport CreateForm from \"./components/CreateForm\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CardForm from \"./components/CardForm\";\n\nfunction App() {\n    const [input, setInput] = useState({ name: \"\", text: \"\" });\n    const [contactList, setContactList] = useState([]);\n\n    function handleChange(e) {\n        const { name, value } = e;\n        setInput((prevValue) => {\n            return { ...prevValue, [name]: value };\n        });\n    }\n    async function createContact(e) {\n        e.preventDefault();\n        const newContact = await request(\"http://localhost:5000/api\", \"POST\", input);\n        setContactList([...contactList, newContact]);\n        setInput({ name: \"\", text: \"\" });\n    }\n\n    async function deleteContact(id) {\n        await request(`http://localhost:5000/api/${id}`, \"DELETE\", null);\n        setContactList(contactList.filter((contact) => id !== contact.id));\n    }\n\n    async function request(url, method = \"GET\", data = null) {\n        try {\n            const headers = {};\n            let body;\n\n            if (data) {\n                headers[\"Content-Type\"] = \"application/json\";\n                body = JSON.stringify(data);\n            }\n\n            const response = await fetch(url, {\n                method,\n                headers,\n                body,\n            });\n            return await response.json();\n        } catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    useEffect(async () => {\n        const response = await request(\"http://localhost:5000/api\");\n        setContactList(response);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <CreateForm\n                name={input.name}\n                text={input.text}\n                onChange={handleChange}\n                onClick={(e) => createContact(e)}\n            />\n\n            {contactList.map((contact, index) => (\n                <CardForm\n                    key={index}\n                    title={contact.name}\n                    text={contact.text}\n                    id={contact.id}\n                    marked={contact.marked}\n                    delete={deleteContact}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;IAAEM,IAAI,EAAE,EAAR;IAAYC,IAAI,EAAE;EAAlB,CAAD,CAAlC;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;EAEA,SAASU,YAAT,CAAsBC,CAAtB,EAAyB;IACrB,MAAM;MAAEL,IAAF;MAAQM;IAAR,IAAkBD,CAAxB;IACAN,QAAQ,CAAEQ,SAAD,IAAe;MACpB,OAAO,EAAE,GAAGA,SAAL;QAAgB,CAACP,IAAD,GAAQM;MAAxB,CAAP;IACH,CAFO,CAAR;EAGH;;EACD,eAAeE,aAAf,CAA6BH,CAA7B,EAAgC;IAC5BA,CAAC,CAACI,cAAF;IACA,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAAC,2BAAD,EAA8B,MAA9B,EAAsCb,KAAtC,CAAhC;IACAK,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBQ,UAAjB,CAAD,CAAd;IACAX,QAAQ,CAAC;MAAEC,IAAI,EAAE,EAAR;MAAYC,IAAI,EAAE;IAAlB,CAAD,CAAR;EACH;;EAED,eAAeW,aAAf,CAA6BC,EAA7B,EAAiC;IAC7B,MAAMF,OAAO,CAAE,6BAA4BE,EAAG,EAAjC,EAAoC,QAApC,EAA8C,IAA9C,CAAb;IACAV,cAAc,CAACD,WAAW,CAACY,MAAZ,CAAoBC,OAAD,IAAaF,EAAE,KAAKE,OAAO,CAACF,EAA/C,CAAD,CAAd;EACH;;EAED,eAAeF,OAAf,CAAuBK,GAAvB,EAAyD;IAAA,IAA7BC,MAA6B,uEAApB,KAAoB;IAAA,IAAbC,IAAa,uEAAN,IAAM;;IACrD,IAAI;MACA,MAAMC,OAAO,GAAG,EAAhB;MACA,IAAIC,IAAJ;;MAEA,IAAIF,IAAJ,EAAU;QACNC,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;QACAC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAP;MACH;;MAED,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,EAAM;QAC9BC,MAD8B;QAE9BE,OAF8B;QAG9BC;MAH8B,CAAN,CAA5B;MAKA,OAAO,MAAMG,QAAQ,CAACE,IAAT,EAAb;IACH,CAfD,CAeE,OAAOpB,CAAP,EAAU;MACRqB,OAAO,CAACC,GAAR,CAAYtB,CAAC,CAACuB,OAAd;IACH;EACJ;;EAEDnC,SAAS,CAAC,YAAY;IAClB,MAAM8B,QAAQ,GAAG,MAAMZ,OAAO,CAAC,2BAAD,CAA9B;IACAR,cAAc,CAACoB,QAAD,CAAd;EACH,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI,QAAC,UAAD;MACI,IAAI,EAAEzB,KAAK,CAACE,IADhB;MAEI,IAAI,EAAEF,KAAK,CAACG,IAFhB;MAGI,QAAQ,EAAEG,YAHd;MAII,OAAO,EAAGC,CAAD,IAAOG,aAAa,CAACH,CAAD;IAJjC;MAAA;MAAA;MAAA;IAAA,QADJ,EAQKH,WAAW,CAAC2B,GAAZ,CAAgB,CAACd,OAAD,EAAUe,KAAV,kBACb,QAAC,QAAD;MAEI,KAAK,EAAEf,OAAO,CAACf,IAFnB;MAGI,IAAI,EAAEe,OAAO,CAACd,IAHlB;MAII,EAAE,EAAEc,OAAO,CAACF,EAJhB;MAKI,MAAM,EAAEE,OAAO,CAACgB,MALpB;MAMI,MAAM,EAAEnB;IANZ,GACSkB,KADT;MAAA;MAAA;MAAA;IAAA,QADH,CARL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;GArEQjC,G;;KAAAA,G;AAuET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}